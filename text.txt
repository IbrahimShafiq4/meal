// Random Meal Api
// https://www.themealdb.com/api/json/v1/1/random.php

// Filter By Area
// https://www.themealdb.com/api/json/v1/1/filter.php?a=Canadian

// Filter By Category
// https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood

// Filter by main ingredient
// https://www.themealdb.com/api/json/v1/1/filter.php?i=chicken_breast

// List all Categories, Area, Ingredients
// https://www.themealdb.com/api/json/v1/1/list.php?c=list => category
// https://www.themealdb.com/api/json/v1/1/list.php?a=list => Area
// https://www.themealdb.com/api/json/v1/1/list.php?i=list => Ingredients

// Category
// https://www.themealdb.com/api/json/v1/1/categories.php

// Filter Using The Id
// https://www.themealdb.com/api/json/v1/1/lookup.php?i=52772

// List all meals by first letter
// https://www.themealdb.com/api/json/v1/1/search.php?f=a

// Search meal by name
// https://www.themealdb.com/api/json/v1/1/search.php?s=Arrabiata










// // Get all input elements on the page
// const inputElements = document.querySelectorAll('input');

// // Add an event listener to each input element
// inputElements.forEach(inputElement => {
// inputElement.addEventListener('input', event => {
//     // Check if the target of the event is the specific input you are interested in
//     if (event.target.classList.contains('search-by-category')) {
//         for (let i = 0; i < 20; i++) {
//             let resultFromApiToGetCategory = await new searchByCategory(value).getCategory();
//             resultConcat += `
//                 <div class="col-lg-3 col-md-2 gy-4">
//                     <div class="box overflow-hidden position-relative rounded-2" data-id=${resultFromApiToGetCategory[i].idMeal}>
//                         <img src="${resultFromApiToGetCategory[i].strMealThumb}" class="w-100 rounded-2" alt="">
//                         <span class="text-center position-absolute start-0 w-100 h-100 d-flex justify-content-center align-items-center fs-3 fw-bold">${resultFromApiToGetCategory[i].strMeal.split(' ').splice(0, 2).join(' ')}</span>
//                     </div>
//                 </div>
//             `
//         }
//     }
// });
// });

// async PreviewTheMealsAfterSearching(value) {
//     inputs.forEach(async (el) => {
//       el.addEventListener('input', async function(e) {
//         let resultConcat = ''; // reset to an empty string
//         if (e.target.classList.contains('search-by-category')) {
//           for (let i = 0; i < 20; i++) {
//             let resultFromApiToGetCategory = await new searchByCategory(value).getCategory();
//             resultConcat += `
//               <div class="col-lg-3 col-md-2 gy-4">
//                 <div class="box overflow-hidden position-relative rounded-2" data-id=${resultFromApiToGetCategory[i].idMeal}>
//                   <img src="${resultFromApiToGetCategory[i].strMealThumb}" class="w-100 rounded-2" alt="">
//                   <span class="text-center position-absolute start-0 w-100 h-100 d-flex justify-content-center align-items-center fs-3 fw-bold">${resultFromApiToGetCategory[i].strMeal.split(' ').splice(0, 2).join(' ')}</span>
//                 </div>
//               </div>
//             `
//           }
  
//           searchingContentRecipe.innerHTML = resultConcat;
//         } else {
//           for (let i = 0; i < 20; i++) {
//             let resultFromApiToGetCategory = await new searchByCategory(value).getCategoryForOneLetter();
//             resultConcat += `
//               <div class="col-lg-3 col-md-2 gy-4">
//                 <div class="box overflow-hidden position-relative rounded-2" data-id=${resultFromApiToGetCategory[i].idMeal}>
//                   <img src="${resultFromApiToGetCategory[i].strMealThumb}" class="w-100 rounded-2" alt="">
//                   <span class="text-center position-absolute start-0 w-100 h-100 d-flex justify-content-center align-items-center fs-3 fw-bold">${resultFromApiToGetCategory[i].strMeal.split(' ').splice(0, 2).join(' ')}</span>
//                 </div>
//               </div>
//             `
//           }
  
//           searchingContentRecipe.innerHTML = resultConcat;
//         }
//       })
//     })
  
//     searchingContentRecipeDisplaying.classList.replace('d-none', 'd-block');
//     const allBoxesRecipe = document.querySelectorAll('.searching .contentRecipe .row .box');
//     for (let i = 0; i < allBoxesRecipe.length; i++) {
//       allBoxesRecipe[i].addEventListener('click', async (e) => {
//         const recipe = new ApiId(e.currentTarget.dataset.id);
//         const recipeDetailsFromApi = await recipe.getIdMealDetails()
//         this.displayTheMeadOfId(recipeDetailsFromApi);
//         searchingContentRecipeDisplaying.classList.replace('d-block', 'd-none');
//         recipeDetails.classList.replace('d-none', 'd-block');
//       })
//     }
//   }

// inputs.forEach((el) => {
//     el.addEventListener('input', async function(e) {
//         let resultConcat = '';
//         if (e.target.classList.contains('search-by-category')) {

//             searchingContentRecipeDisplaying.classList.replace('d-none', 'd-block');
//             for (let i = 0; i < 20; i++) {
//                 let resultFromApiToGetCategory = await new searchByCategory(value).getCategory();
//                 resultConcat += `
//                     <div class="col-lg-3 col-md-2 gy-4">
//                         <div class="box overflow-hidden position-relative rounded-2" data-id=${resultFromApiToGetCategory[i].idMeal}>
//                             <img src="${resultFromApiToGetCategory[i].strMealThumb}" class="w-100 rounded-2" alt="">
//                             <span class="text-center position-absolute start-0 w-100 h-100 d-flex justify-content-center align-items-center fs-3 fw-bold">${resultFromApiToGetCategory[i].strMeal.split(' ').splice(0, 2).join(' ')}</span>
//                         </div>
//                     </div>
//                 `
//             }
//             searchingContentRecipe.innerHTML = resultConcat;
//         } else {
//             for (let i = 0; i < 20; i++) {
//                 let resultFromApiToGetCategory = await new searchByCategory(value).getCategoryForOneLetter();
//                 resultConcat += `
//                     <div class="col-lg-3 col-md-2 gy-4">
//                         <div class="box overflow-hidden position-relative rounded-2" data-id=${resultFromApiToGetCategory[i].idMeal}>
//                             <img src="${resultFromApiToGetCategory[i].strMealThumb}" class="w-100 rounded-2" alt="">
//                             <span class="text-center position-absolute start-0 w-100 h-100 d-flex justify-content-center align-items-center fs-3 fw-bold">${resultFromApiToGetCategory[i].strMeal.split(' ').splice(0, 2).join(' ')}</span>
//                         </div>
//                     </div>
//                 `
//             }

//             searchingContentRecipeDisplaying.classList.replace('d-none', 'd-block');
//             searchingContentRecipe.innerHTML = resultConcat;
//         }
//     })
// })








/* section {
display: flex;
justify-content: space-between;
align-items: center;
min-height: 100vh;
padding: 100px;
gap: 100px;
}

@media (max-width: 767px) {
section {
    flex-direction: column;
    justify-content: center;
}
}

section .content {
max-width: 700px;
}

section .content h2 {
font-size: 3.5em;
color: #fff;
font-weight: 500;
font-family: Arial, Helvetica, sans-serif
}

section .content h2 b {
color: #0f0;
}

section .content p {
color: #999;
font-size: 1.1em;
}

section .content .btn {
padding: 10px 15px; 
background-color: #fff;
color: #222;
text-decoration: none;
text-transform: uppercase;
font-weight: 500;
display: inline-block;
margin-top: 25px;
transition: 0.5s linear;
letter-spacing: 0.2em;
}

section .content .btn:hover {
letter-spacing: 0.4em;
}

section .container {
position: relative;
right: 100px;
min-width: 400px;
width: 400px;
display: flex;
justify-content: center;
align-items: center;
flex-wrap: wrap;
}

section .container .element {
position: relative;
width: 40px;
height: 40px;
background-color: #fff;
scale: 0.75;
} */

<!-- <section>

    <div class="content">
        <h2>Level Up Your recipes <b>With Us</b> </h2>
        <p>Here U Can Find The Best Recipes MealðŸ˜ƒ</p>
        <a href="#" class="btn">Learn More</a>
    </div>
    <div class="container"></div>
</section> -->

/* 

    let container = document.querySelector('.container');
for (let i = 1; i <= 100; i++) {
    let dot = document.createElement('div');
    dot.classList.add('element');
    container.appendChild(dot);
}

let dotAll = document.querySelectorAll('.element');
let animation = anime.timeline({
    targets: dotAll,
    easing: 'easeInOutExpo',
    loop: true,
    delay: anime.stagger(100, {grid: [10, 10], from: 'center'})
})
animation.add({
    rotateZ: 180,
    translateY: anime.stagger(-20, {grid: [10, 10], from: 'center', axis: 'y'}),
    translateX: anime.stagger(-20, {grid: [10, 10], from: 'center', axis: 'x'}),
    opacity: 1,
}).add({
    borderRadius: 50,
}).add({
    scale: 0.2,
    opacity: 0.2,
})
animation.add({
    rotateZ: 180,
    translateY: anime.stagger(0, {grid: [10, 10], from: 'center', axis: 'y'}),
    translateX: anime.stagger(0, {grid: [10, 10], from: 'center', axis: 'x'}),
    opacity: 1,
}).add({
    scale: 1,
    borderRadius: 0,
}).add({
    rotateZ: -90,
})

*/